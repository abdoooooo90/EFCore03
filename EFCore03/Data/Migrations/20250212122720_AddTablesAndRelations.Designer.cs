// <auto-generated />
using System;
using EFCore03.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCore03.Data.Migrations
{
    [DbContext(typeof(ITIDbContext))]
    [Migration("20250212122720_AddTablesAndRelations")]
    partial class AddTablesAndRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCore03.Data.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<TimeSpan?>("Duration")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int?>("Top_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Top_ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Course_Inst", b =>
                {
                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("Inst_ID")
                        .HasColumnType("int");

                    b.Property<int>("evaluate")
                        .HasColumnType("int");

                    b.HasKey("Course_ID", "Inst_ID");

                    b.HasIndex("Inst_ID");

                    b.ToTable("Course_Insts");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateOnly>("HiringDate")
                        .HasColumnType("date");

                    b.Property<int?>("Ins_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.HasIndex("Ins_ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int?>("Bouns")
                        .HasColumnType("int");

                    b.Property<int?>("Dept_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("HourRate")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(20.0m);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar");

                    b.Property<int>("Salary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3000);

                    b.HasKey("ID");

                    b.HasIndex("Dept_ID");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("Dept_ID")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.HasIndex("Dept_ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EFCore03.Data.Models.StudentCourse", b =>
                {
                    b.Property<int>("Stud_ID")
                        .HasColumnType("int");

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasKey("Stud_ID", "Course_ID");

                    b.HasIndex("Course_ID");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Topic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("ID");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Course", b =>
                {
                    b.HasOne("EFCore03.Data.Models.Topic", "Topic")
                        .WithMany("Courses")
                        .HasForeignKey("Top_ID");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Course_Inst", b =>
                {
                    b.HasOne("EFCore03.Data.Models.Course", "Course")
                        .WithMany("CouIns")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore03.Data.Models.Instructor", "Instructor")
                        .WithMany("course_Insts")
                        .HasForeignKey("Inst_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Department", b =>
                {
                    b.HasOne("EFCore03.Data.Models.Instructor", "Instructor")
                        .WithMany("departments")
                        .HasForeignKey("Ins_ID");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Instructor", b =>
                {
                    b.HasOne("EFCore03.Data.Models.Department", "Manager")
                        .WithMany("ManaIns")
                        .HasForeignKey("Dept_ID");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Student", b =>
                {
                    b.HasOne("EFCore03.Data.Models.Department", "Department")
                        .WithMany("Student")
                        .HasForeignKey("Dept_ID");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EFCore03.Data.Models.StudentCourse", b =>
                {
                    b.HasOne("EFCore03.Data.Models.Course", "Course")
                        .WithMany("Courses")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore03.Data.Models.Student", "Student")
                        .WithMany("studentCourses")
                        .HasForeignKey("Stud_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Course", b =>
                {
                    b.Navigation("CouIns");

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Department", b =>
                {
                    b.Navigation("ManaIns");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Instructor", b =>
                {
                    b.Navigation("course_Insts");

                    b.Navigation("departments");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Student", b =>
                {
                    b.Navigation("studentCourses");
                });

            modelBuilder.Entity("EFCore03.Data.Models.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
